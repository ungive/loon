services:
  loon:
    image: loon:latest
    restart: unless-stopped
    volumes:
      - ./config.yaml:/app/config.yaml:ro
  caddy:
    build:
      context: .
      dockerfile: caddy.dockerfile
    restart: unless-stopped
    env_file:
      - caddy.env
    ports:
      - "80:80" # http -> https
      - "8080:8080" # metrics
      - "443:443"
      - "443:443/udp"
      - "444:444"
      - "444:444/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./privkey.pem:/privkey.pem
      - ./cert.pem:/cert.pem
      - caddy_data:/data
      - caddy_config:/config
  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

volumes:
  caddy_data:
  caddy_config:
  prometheus_data:
